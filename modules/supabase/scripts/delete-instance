#!/usr/bin/env bash

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
REPO_ROOT="$(git rev-parse --show-toplevel)"
SECRETS_DIR="${REPO_ROOT}/secrets"
SECRETS_NIX="${SECRETS_DIR}/secrets.nix"

# Helper functions
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Remove secret from secrets.nix
remove_secret_from_nix() {
    local secret_name="$1"
    
    if ! grep -q "\"${secret_name}.age\"" "$SECRETS_NIX"; then
        log_warning "Secret '$secret_name' not found in secrets.nix"
        return 0
    fi
    
    # Remove the line containing the secret
    sed -i "/\"${secret_name}.age\"/d" "$SECRETS_NIX"
    
    log_success "Removed secret '$secret_name' from secrets.nix"
}

# Remove secret file
remove_secret_file() {
    local secret_name="$1"
    local secret_file="${SECRETS_DIR}/${secret_name}.age"
    
    if [[ ! -f "$secret_file" ]]; then
        log_warning "Secret file '$secret_file' does not exist"
        return 0
    fi
    
    # Create backup before deletion
    local backup_file="${secret_file}.deleted.$(date +%s)"
    mv "$secret_file" "$backup_file"
    
    log_success "Removed secret file: $secret_file (backed up to $backup_file)"
}

# Confirm deletion
confirm_deletion() {
    local instance="$1"
    
    echo
    log_warning "This will permanently delete all secrets and configuration for instance '$instance'"
    echo "The following will be removed:"
    echo "  - supabase-${instance}-jwt.age"
    echo "  - supabase-${instance}-anon.age"
    echo "  - supabase-${instance}-service.age"
    echo "  - supabase-${instance}-db.age"
    echo "  - Database: supabase_${instance}"
    echo "  - User: supabase_${instance}"
    echo
    
    read -p "Are you sure you want to continue? (type 'yes' to confirm): " confirmation
    
    if [[ "$confirmation" != "yes" ]]; then
        log_info "Deletion cancelled"
        exit 0
    fi
}

# Main function
main() {
    if [[ $# -ne 1 ]]; then
        echo "Usage: $0 <instance-name>"
        echo "Example: $0 prod"
        exit 1
    fi
    
    local instance="$1"
    
    log_info "Deleting Supabase instance: $instance"
    
    # Confirm deletion
    confirm_deletion "$instance"
    
    # Define secret names
    local jwt_secret_name="supabase-${instance}-jwt"
    local anon_key_name="supabase-${instance}-anon"
    local service_key_name="supabase-${instance}-service"
    local database_url_name="supabase-${instance}-db"
    
    # Remove secrets from secrets.nix
    log_info "Removing secrets from secrets.nix..."
    remove_secret_from_nix "$jwt_secret_name"
    remove_secret_from_nix "$anon_key_name"
    remove_secret_from_nix "$service_key_name"
    remove_secret_from_nix "$database_url_name"
    
    # Remove secret files
    log_info "Removing secret files..."
    remove_secret_file "$jwt_secret_name"
    remove_secret_file "$anon_key_name"
    remove_secret_file "$service_key_name"
    remove_secret_file "$database_url_name"
    
    log_success "Supabase instance '$instance' secrets deleted successfully!"
    
    echo
    echo "Additional cleanup required:"
    echo "1. Remove the instance from your NixOS configuration:"
    echo "   Remove constellation.supabase.instances.${instance} block"
    echo
    echo "2. Drop the PostgreSQL database (after deploying config):"
    echo "   sudo -u postgres dropdb supabase_${instance}"
    echo "   sudo -u postgres dropuser supabase_${instance}"
    echo
    echo "3. Deploy the updated configuration:"
    echo "   just deploy <hostname>"
    echo
    echo "4. Clean up any remaining data:"
    echo "   sudo rm -rf /var/lib/supabase-${instance}"
}

main "$@"