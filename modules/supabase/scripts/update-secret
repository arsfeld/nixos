#!/usr/bin/env bash

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
REPO_ROOT="$(git rev-parse --show-toplevel)"
SECRETS_DIR="${REPO_ROOT}/secrets"

# Helper functions
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check dependencies
check_dependencies() {
    local deps=("agenix" "age")
    for dep in "${deps[@]}"; do
        if ! command -v "$dep" &> /dev/null; then
            log_error "Required dependency '$dep' not found"
            exit 1
        fi
    done
}

# Decrypt and update .env file
update_env_file() {
    local instance="$1"
    local env_secret_name="supabase-${instance}-env"
    local secret_file="${SECRETS_DIR}/${env_secret_name}.age"
    
    if [[ ! -f "$secret_file" ]]; then
        log_error "Secret file '$secret_file' not found"
        return 1
    fi
    
    log_info "Decrypting .env file for instance: $instance"
    
    # Create temporary file
    local temp_file=$(mktemp)
    
    # Decrypt the file
    cd "$SECRETS_DIR"
    age -d "$env_secret_name.age" > "$temp_file"
    
    # Open in editor
    ${EDITOR:-nano} "$temp_file"
    
    # Ask for confirmation
    echo
    log_warning "You've edited the .env file for instance '$instance'"
    read -p "Do you want to save these changes? (y/N) " -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        # Re-encrypt the file
        agenix -e "${env_secret_name}.age" < "$temp_file"
        log_success "Secret file updated successfully"
    else
        log_info "Changes discarded"
    fi
    
    # Clean up
    rm "$temp_file"
}

# Main function
main() {
    if [[ $# -ne 1 ]]; then
        echo "Usage: $0 <instance-name>"
        echo "Example: $0 prod"
        echo
        echo "This script allows you to edit the .env file for a Supabase instance."
        echo "Common use cases:"
        echo "  - Update domain URLs (SITE_URL, API_EXTERNAL_URL, SUPABASE_PUBLIC_URL)"
        echo "  - Configure SMTP settings"
        echo "  - Add OpenAI API key"
        echo "  - Modify authentication settings"
        exit 1
    fi
    
    local instance="$1"
    
    # Check dependencies
    check_dependencies
    
    # Update the env file
    update_env_file "$instance"
}

main "$@"